<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd  
       ">
    <context:component-scan base-package="bhe.net.cn.*" />
    <bean
        id="propertyConfigurer" 
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:database.properties</value>
            </list>
        </property>
    </bean>
    <!-- Timer switch -->
    <task:annotation-driven />
    <bean
        id="dataSource"
        class="com.alibaba.druid.pool.DruidDataSource">
        <property
            name="driverClassName"
            value="${driverClassName}" />
        <property
            name="url"
            value="${url}"></property>
        <property
            name="username"
            value="${username}"></property>
        <property
            name="password"
            value="${password}"></property>
        <property
            name="initialSize"
            value="${druid.initialSize}"></property>
        <property
            name="minIdle"
            value="${druid.minIdle}"></property>
        <property
            name="maxActive"
            value="${druid.maxActive}"></property>
        <property
            name="maxWait"
            value="${druid.maxWait}"></property>
        <property
            name="timeBetweenEvictionRunsMillis"
            value="${druid.timeBetweenEvictionRunsMillis}"></property>
        <property
            name="minEvictableIdleTimeMillis"
            value="${druid.minEvictableIdleTimeMillis}"></property>
        <property
            name="validationQuery"
            value="${druid.validationQuery}"></property>
        <property
            name="testWhileIdle"
            value="${druid.testWhileIdle}"></property>
        <property
            name="testOnBorrow"
            value="${druid.testOnBorrow}"></property>
        <property
            name="testOnReturn"
            value="${druid.testOnReturn}"></property>
        <property
            name="poolPreparedStatements"
            value="${druid.poolPreparedStatements}"></property>
        <property
            name="maxPoolPreparedStatementPerConnectionSize"
            value="${druid.maxPoolPreparedStatementPerConnectionSize}"></property>
        <property
            name="filters"
            value="${druid.filters}"></property>
        <property
            name="connectionProperties"
            value="${druid.connectionProperties}"></property>
        <property
            name="useGlobalDataSourceStat"
            value="${druid.useGlobalDataSourceStat}"></property>
    </bean>
    <!-- <bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource"> <property name="alias" value="proxoolDataSource" /> <property name="driver" value="${driverClassName}" /> <property name="driverUrl" value="${url}" /> <property name="user" value="${username}" /> <property name="password" value="${password}" /> <property name="maximumConnectionCount" value="${proxool.maximum.connection.count}" /> <property name="minimumConnectionCount" value="${proxool.minimum.connection.count}" /> <property name="statistics" value="${proxool.statistics}" /> <property name="simultaneousBuildThrottle" value="${proxool.simultaneous.build.throttle}" /> <property name="prototypeCount" value="${proxool.prototypeCount}" 
        /> <property name="verbose" value="${proxool.verbose}" /> <property name="trace" value="${proxool.trace}" /> <property name="houseKeepingTestSql" value="${proxool.houseKeepingTestSql}" /> <property name="maximumActiveTime" value="${proxool.maximumActiveTime}" /> </bean> -->
    <bean
        id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property
            name="dataSource"
            ref="dataSource" />
        <property name="packagesToScan">
            <list>
                <value>bhe.net.cn.entity</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop>
                <prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
                <prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
                <prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop>
                <prop key="javax.persistence.validation.mode">${javax.persistence.validation.mode}</prop>
                <prop key="hibernate.connection.release_mode">${hibernate.connection.release_mode}</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
                <prop key="net.sf.ehcache.configurationResourceName">${net.sf.ehcache.configurationResourceName}</prop>
                <prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>
            </props>
        </property>
    </bean>
    <aop:aspectj-autoproxy proxy-target-class="true" />
    <!-- Enable AOP listening, is only valid for the current configuration file -->
    <aop:aspectj-autoproxy expose-proxy="true" />
    <!-- Open annotation transaction only valid for current configuration file -->
    <tx:annotation-driven transaction-manager="txManager" />
    <bean
        id="txManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property
            name="sessionFactory"
            ref="sessionFactory" />
    </bean>
    <tx:advice
        id="txAdvice"
        transaction-manager="txManager">
        <tx:attributes>
            <tx:method
                name="*"
                propagation="REQUIRED"
                isolation="READ_COMMITTED" />
        </tx:attributes>
    </tx:advice>
    <aop:config expose-proxy="true">
        <aop:pointcut
            id="txPointcut"
            expression="execution(* bhe.net.cn.service.*.*(..))" />
        <aop:advisor
            advice-ref="txAdvice"
            pointcut-ref="txPointcut" />
    </aop:config>
    <!-- Spring Session -->
    <!-- See https://blog.csdn.net/xiao__gui/article/details/52706243 -->
    <bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <property
            name="maxInactiveIntervalInSeconds"
            value="${redis.session.expire}" />
    </bean>
    <bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property
            name="hostName"
            value="${redis.host}" />
        <property
            name="port"
            value="${redis.port}" />
        <property
            name="password"
            value="${redis.password}" />
    </bean>
</beans>